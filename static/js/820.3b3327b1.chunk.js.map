{"version":3,"file":"static/js/820.3b3327b1.chunk.js","mappings":"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","sources":["components/Error/Error.styled.js","components/Error/Error.jsx","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesList.jsx","components/SearchMoviesForm/SearchMoviesForm.styled.js","components/SearchMoviesForm/SearchMoviesForm.jsx","components/Pages/MoviesPage/MoviesPage.jsx","services/moviesApi.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ErrorText = styled.p`\n  color: tomato;\n  font-size: 24px;\n`;\n","import { ErrorText } from './Error.styled';\n\nconst Error = () => {\n  return (\n    <ErrorText>\n      Oops...Something went wrong, reload the page or try again later!\n    </ErrorText>\n  );\n};\n\nexport default Error;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const MoviesLink = styled(Link)`\ndisplay: flex;\nalign-items: end;\ngap: 10px;\n  text-decoration: none;\n  color: #212121;\n  font-size: 20px;\n  &:hover {\n    color: tomato;\n  }\n`;\n\nexport const MoviesItem = styled.li`\n  list-style: none;\n  padding: 4px;\n  margin-left: 16px;\n`;\n\nexport const MoviesLists = styled.ul`\n    display: flex;\n    flex-direction: column;\n    gap: 20px; \n`\n\nexport const Image = styled.img`\n  width: 100px;\n  height: 150px;\n  display: block; \n`\n","import { useLocation } from 'react-router-dom';\n\nimport {\n  MoviesLink,\n  MoviesLists,\n  MoviesItem,\n  Image,\n} from './MoviesList.styled';\nimport noImage from '../../image/noImage.png';\n\nconst MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <MoviesLists>\n      {movies.map(({ id, title, poster_path }) => (\n        <MoviesItem key={id}>\n          <MoviesLink state={{ from: location }} to={`/movies/${id}`}>\n            <Image\n              src={\n                !poster_path\n                  ? noImage\n                  : `https://image.tmdb.org/t/p/w500/${poster_path}`\n              }\n              alt={title}\n            />\n            {title}\n          </MoviesLink>\n        </MoviesItem>\n      ))}\n    </MoviesLists>\n  );\n};\n\nexport default MoviesList;\n\nMoviesList.defaultProps = {\n  items: [],\n};\n","import styled from 'styled-components';\n\nexport const FormStyle = styled.form`\n  margin-top: 16px;\n  margin-left: 60px;\n`;\n\nexport const LabelStyle = styled.label`\n  display: flex;\n  align-items: center;\n`;\n\nexport const InputStyle = styled.input`\n  padding: 8px;\n  width: 260px;\n  font-size: 16px;\n  &:focus {\n    outline: none;\n    border: 1px dotted grey;\n    box-shadow: 0 2px 2px 2px rgba(0, 0, 0, 0.4);\n  }\n`;\n\nexport const ButtonStyle = styled.button`\n  font-size: 16px;\n  font-weight: 600;\n  height: 36px;\n  padding: 8px;\n  cursor: pointer;\n  border: none;\n  display: inline-flex;\n  align-items: center;\n  margin: 8px;\n  border-radius: 4px;\n  box-shadow: 0 2px 2px 2px rgba(0, 0, 0, 0.4);\n  color: tomato;\n  background-color: #b0baf5;\n  &:hover,\n  &:focus {\n    background-color: #031992;\n    font-style: italic;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { GrSearch } from 'react-icons/gr';\nimport {\n  ButtonStyle,\n  FormStyle,\n  LabelStyle,\n  InputStyle,\n} from './SearchMoviesForm.styled';\n\nconst INITIAL_STATE = {\n  query: '',\n};\nconst SearchMoviesForm = ({ onSubmit }) => {\n  const [state, setState] = useState({ ...INITIAL_STATE });\n\n  const handleChange = ({ target }) => {\n    const { name, value } = target;\n    setState(prevState => {\n      return { ...prevState, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...INITIAL_STATE });\n  };\n\n  const { query } = state;\n\n  return (\n    <main>\n      <FormStyle onSubmit={handleSubmit}>\n        <LabelStyle>\n          <InputStyle\n            type=\"text\"\n            value={query}\n            onChange={handleChange}\n            placeholder=\"Search movies\"\n            name=\"query\"\n            autoComplete=\"off\"\n            autoFocus\n          />\n          <ButtonStyle type=\"submit\">\n            <GrSearch />\n            Search\n          </ButtonStyle>\n        </LabelStyle>\n      </FormStyle>\n    </main>\n  );\n};\nexport default SearchMoviesForm;\n\nSearchMoviesForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Loading from 'components/Loading/loading';\n\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport SearchMoviesForm from 'components/SearchMoviesForm/SearchMoviesForm';\n\nimport Error from 'components/Error/Error';\nimport { getMoviesSearch } from 'services/moviesApi';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    const fetchSearchMovies = async () => {\n      try {\n        setLoading(true);\n        const data = await getMoviesSearch(query);\n        if (data.length === 0) {\n          toast.error('No movies found for this query');\n        }\n        setMovies(data);\n      } catch (error) {\n        setError(error.massage);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchSearchMovies();\n  }, [query]);\n\n  const searchMovies = ({ query }) => {\n    if (query.trim() === '') {\n      toast.error('Specify your request, please.');\n    }\n    setMovies([]);\n    setSearchParams({ query });\n  };\n\n  return (\n    <div>\n      <SearchMoviesForm onSubmit={searchMovies} />\n      <ToastContainer />\n\n      {loading && <Loading />}\n\n      {error && <Error />}\n      {movies.length > 0 && <MoviesList movies={movies} />}\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst KEY = '5893f70ab3467df3407a6935d158e774';\n\nconst instance = axios.create({\n  baseURL: 'https://api.themoviedb.org/3',\n  params: {\n    api_key: KEY,\n    language: 'en-us',\n  },\n});\n\nexport const getMoviesTrending = async () => {\n  const { data } = await instance.get('/trending/movie/day?page=1');\n  return data.results;\n};\n\nexport const getMoviesSearch = async query => {\n  const { data } = await instance.get(\n    `/search/movie?query=${query}&page=1&include_adult=false`\n  );\n  return data.results;\n};\n\nexport const getMoviesDetails = async id => {\n  const { data } = await instance.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMoviesCasting = async id => {\n  const { data } = await instance.get(`/movie/${id}/credits`);\n  return data.cast;\n};\n\nexport const getMoviesReviews = async id => {\n  const { data } = await instance.get(`/movie/${id}/reviews?page=1`);\n  return data.results;\n};\n\n// https://api.themoviedb.org/3/movie/550?api_key=2e28e0889deced997fe5d570fd3e41df\n"],"names":["ErrorText","styled","MoviesLink","Link","MoviesItem","MoviesLists","Image","MoviesList","movies","location","useLocation","map","id","title","poster_path","state","from","to","src","alt","defaultProps","items","FormStyle","LabelStyle","InputStyle","ButtonStyle","INITIAL_STATE","query","onSubmit","useState","setState","e","preventDefault","type","value","onChange","target","name","prevState","placeholder","autoComplete","autoFocus","setMovies","loading","setLoading","error","setError","useSearchParams","searchParams","setSearchParams","get","useEffect","fetchSearchMovies","getMoviesSearch","data","length","toast","massage","trim","Error","instance","axios","baseURL","params","api_key","language","getMoviesTrending","results","getMoviesDetails","getMoviesCasting","cast","getMoviesReviews"],"sourceRoot":""}